import React, { useState } from 'react';

const Quest = ({ progress, setProgress, onComplete }) => {
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [answers, setAnswers] = useState([]);
  const [showFeedback, setShowFeedback] = useState(false);
  const [feedbackMessage, setFeedbackMessage] = useState('');

  const questions = [
    {
      id: 1,
      type: 'choice',
      question: '–ï—Å–ª–∏ –±—ã –≥–∞–ª–µ—Ä–µ–∏ –ë–∞—Ä—Å–µ–ª–æ–Ω—ã –±—ã–ª–∏ –ø—ã–ª—å—é –≤ –ø—É—Å—Ç—ã–Ω–µ, —Å–∫–æ–ª—å–∫–æ –ø–µ—Å—á–∏–Ω–æ–∫ —Ç—ã –Ω–∞—Å–æ–±–∏—Ä–∞–ª–∞?',
      options: ['‚àû –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç—å', '128 —Å–≤—è—â–µ–Ω–Ω—ã—Ö –∫—Ä—É–ø–∏–Ω–æ–∫', '42 (–æ—Ç–≤–µ—Ç –Ω–∞ –≤—Å—ë)', '–°—Ç–æ–ª—å–∫–æ, —Å–∫–æ–ª—å–∫–æ –∑–≤—ë–∑–¥ –Ω–∞–¥ –ø–ª–∞–π–µ–π'],
      feedback: [
        '–ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç—å! –î–∞, –∏—Å–∫—É—Å—Å—Ç–≤–æ –Ω–µ –∏–º–µ–µ—Ç –≥—Ä–∞–Ω–∏—Ü...',
        '128! –¢–æ—á–Ω–æ –∫–∞–∫ –≤ —Ç–≤–æ–µ–π —Ç–∞–±–ª–∏—Ü–µ. –¢—ã –ø–æ–º–Ω–∏—à—å –∫–∞–∂–¥—É—é!',
        '42 - –≥–ª–∞–≤–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –≥–ª–∞–≤–Ω—ã–π –≤–æ–ø—Ä–æ—Å –∂–∏–∑–Ω–∏, –≤—Å–µ–ª–µ–Ω–Ω–æ–π –∏ –≤—Å–µ–≥–æ —Ç–∞–∫–æ–≥–æ!',
        '–ü–æ—ç—Ç–∏—á–Ω–æ! –ö–∞–∂–¥–∞—è –≥–∞–ª–µ—Ä–µ—è - –∫–∞–∫ –∑–≤–µ–∑–¥–∞ –≤ —Ç–≤–æ–µ–π –≤—Å–µ–ª–µ–Ω–Ω–æ–π –∏—Å–∫—É—Å—Å—Ç–≤–∞.'
      ]
    },
    {
      id: 2,
      type: 'choice',
      question: '–í –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –≤—Å–µ–ª–µ–Ω–Ω–æ–π —Ç—ã –∫—É—Ä–∞—Ç–æ—Ä. –ö–∞–∫—É—é –≤—ã—Å—Ç–∞–≤–∫—É —Ç—ã –æ—Ç–∫—Ä—ã–≤–∞–µ—à—å?',
      options: [
        '"–î–∞–Ω–Ω—ã–µ –∫–∞–∫ –∏—Å–∫—É—Å—Å—Ç–≤–æ: –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Ö–∞–æ—Å–∞"',
        '"–†—É—Ñ—Ç–æ–ø—ã –ë–∞—Ä—Å–µ–ª–æ–Ω—ã: –º–µ–∂–¥—É –Ω–µ–±–æ–º –∏ –±–µ—Ç–æ–Ω–æ–º"',
        '"JSON-–ø–æ—ç–∑–∏—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏"',
        '"–í –æ–¥–Ω–æ–º —Ä—è–¥—É —Å –ë—Ä–∏—Ç–Ω–∏: –ø–æ–ø-–∞—Ä—Ç –∞–±—Å—É—Ä–¥–∞"'
      ],
      feedback: [
        'Data artist! –ü—Ä–µ–≤—Ä–∞—â–∞–µ—à—å —Ü–∏—Ñ—Ä—ã –≤ –∫—Ä–∞—Å–æ—Ç—É.',
        '–†—É—Ñ—Ç–æ–ø—ã! –¢–∞–º, –≥–¥–µ –≥–æ—Ä–æ–¥ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —Å –Ω–µ–±–æ–º.',
        'JSON –∫–∞–∫ –ø–æ—ç–∑–∏—è - —Ç–æ–ª—å–∫–æ —Ç—ã –º–æ–∂–µ—à—å —É–≤–∏–¥–µ—Ç—å –∫—Ä–∞—Å–æ—Ç—É –≤ —Ñ–∏–≥—É—Ä–Ω—ã—Ö —Å–∫–æ–±–∫–∞—Ö!',
        '–•–ê–•–ê–•–ê! "–í –æ–¥–Ω–æ–º —Ä—è–¥—É —Å –ë—Ä–∏—Ç–Ω–∏" - –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ!'
      ]
    },
    {
      id: 3,
      type: 'choice',
      question: '–î—É—Ö –ø—É—Å—Ç—ã–Ω–∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Ç–µ–±–µ –≤—ã–±—Ä–∞—Ç—å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –ø–æ –ò—Å–ø–∞–Ω–∏–∏. –ß—Ç–æ –≤—ã–±–∏—Ä–∞–µ—à—å?',
      options: [
        'üöê –ê–≤—Ç–æ–¥–æ–º –∑–∞ –µ–≤—Ä–æ –≤ –¥–µ–Ω—å',
        'üöå –ê–≤—Ç–æ–±—É—Å –ø–æ—Å–ª–µ —Ä–∞–∑–º—ã—Ç–∏—è –¥–æ—Ä–æ–≥',
        'ü¶© –†–æ–∑–æ–≤—ã–π —Ñ–ª–∞–º–∏–Ω–≥–æ',
        'üìä –ì—Ä–∞—Ñ–∏–∫ –º–µ–¥–∏–∞–Ω–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∞—Ä–µ–Ω–¥—ã'
      ],
      feedback: [
        '–ê–≤—Ç–æ–¥–æ–º –∑–∞ –µ–≤—Ä–æ! –ö–∞–∫ –≤ –ò—Ç–∞–ª–∏–∏ - –∫—Ä–∞–π–Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é!',
        '–ê–≤—Ç–æ–±—É—Å —Ö—Ä–∞–±—Ä–µ—Ü–æ–≤! –î–∞–∂–µ —Ä–∞–∑–º—ã—Ç—ã–µ –¥–æ—Ä–æ–≥–∏ —Ç–µ–±—è –Ω–µ –æ—Å—Ç–∞–Ω–æ–≤—è—Ç.',
        '–§–ª–∞–º–∏–Ω–≥–æ?! –°—Ç–∏–ª—å–Ω–æ! –í –ë–∞—Ä—Å–µ–ª–æ–Ω–µ –≤—Å—ë –≤–æ–∑–º–æ–∂–Ω–æ!',
        '–•–∞! –ï–¥–µ—à—å –Ω–∞ –≥—Ä–∞—Ñ–∏–∫–µ! –ò—Å—Ç–∏–Ω–Ω—ã–π data analyst!'
      ]
    },
    {
      id: 4,
      type: 'choice',
      question: '–ù–∞ Burning Man —Ç—ã —Å–æ–∑–¥–∞—ë—à—å –∞—Ä—Ç-–∏–Ω—Å—Ç–∞–ª–ª—è—Ü–∏—é. –ß—Ç–æ –≤ –æ—Å–Ω–æ–≤–µ?',
      options: [
        '–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –º—É–∑–µ–µ–≤, –ø—Ä–µ–≤—Ä–∞—â—ë–Ω–Ω—ã–µ –≤ —Å–æ–∑–≤–µ–∑–¥–∏–µ',
        'RSS-–ª–µ–Ω—Ç—ã MACBA, –∑–≤—É—á–∞—â–∏–µ –∫–∞–∫ —Ç–µ—Ö–Ω–æ',
        'Instagram-–ø–∞—Ä—Å–∏–Ω–≥, —Ä–∏—Å—É—é—â–∏–π –º–∞–Ω–¥–∞–ª—ã',
        '–í—Å—ë –≤—ã—à–µ–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω–æ–µ –≤ –≤–∏–¥–µ –¥–∞—Ç–∞-—Å–∫—É–ª—å–ø—Ç—É—Ä—ã'
      ],
      feedback: [
        '–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –∑–≤—ë–∑–¥–∞–º –∏—Å–∫—É—Å—Å—Ç–≤–∞! –ö–∞–∂–¥—ã–π –º—É–∑–µ–π - —Ç–æ—á–∫–∞ —Å–≤–µ—Ç–∞.',
        'MACBA-—Ç–µ—Ö–Ω–æ! –°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ –∑–≤—É—á–∏—Ç –∫–∞–∫ –±–∏—Ç–±–æ–∫—Å –±—É–¥—É—â–µ–≥–æ.',
        '–ò–Ω—Å—Ç–∞-–º–∞–Ω–¥–∞–ª—ã! –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ –∫–∞–∫ –¥—É—Ö–æ–≤–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞.',
        '–í–°–Å –°–†–ê–ó–£! –ú–∞–∫—Å–∏–º–∞–ª–∏–∑–º –¥–æ—Å—Ç–æ–π–Ω—ã–π –ø–ª–∞–π–∏!'
      ]
    },
    {
      id: 5,
      type: 'ritual',
      question: '–§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∏—Ç—É–∞–ª: —á—Ç–æ –¥–ª—è —Ç–µ–±—è —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ –≤ –ø–æ–¥–∞—Ä–∫–µ?',
      options: ['üí∞ –¶–µ–Ω–∞', 'üìè –†–∞–∑–º–µ—Ä', 'üíù –í–Ω–∏–º–∞–Ω–∏–µ', 'üéÅ –£–ø–∞–∫–æ–≤–∫–∞'],
      feedback: [
        '–¶–µ–Ω–∞? –¢—ã —Ü–µ–Ω–∏—à—å –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã. –†–µ—Å–ø–µ–∫—Ç!',
        '–†–∞–∑–º–µ—Ä? –î–∞, –∏–Ω–æ–≥–¥–∞ –≤–∞–∂–Ω–æ, —á—Ç–æ–±—ã –ø–æ–¥–∞—Ä–æ–∫ –ø–æ–º–µ—Å—Ç–∏–ª—Å—è –≤ –∫–≤–∞—Ä—Ç–∏—Ä—É!',
        '–í–Ω–∏–º–∞–Ω–∏–µ! –ö–æ–Ω–µ—á–Ω–æ! "–î–ª—è –º–µ–Ω—è —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ" - —Ç–≤–æ–∏ —Å–ª–æ–≤–∞!',
        '–£–ø–∞–∫–æ–≤–∫–∞! –≠—Å—Ç–µ—Ç! –ö—Ä–∞—Å–∏–≤–∞—è –æ–±–µ—Ä—Ç–∫–∞ - —ç—Ç–æ —Ç–æ–∂–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ!'
      ]
    }
  ];

  const handleAnswer = (answerIndex) => {
    const question = questions[currentQuestion];
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–¥–±–µ–∫
    setFeedbackMessage(question.feedback[answerIndex]);
    setShowFeedback(true);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
    const newAnswers = [...answers, { question: currentQuestion, answer: answerIndex }];
    setAnswers(newAnswers);

    // –ß–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
    setTimeout(() => {
      setShowFeedback(false);
      
      const newProgress = ((currentQuestion + 1) / questions.length) * 100;
      setProgress(newProgress);

      if (currentQuestion + 1 >= questions.length) {
        setTimeout(() => onComplete(), 500);
      } else {
        setCurrentQuestion(currentQuestion + 1);
      }
    }, 2000);
  };

  const question = questions[currentQuestion];

  return (
    <div className="container">
      <h2>–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ {currentQuestion + 1} –∏–∑ {questions.length}</h2>
      
      <div className="progress-bar">
        <div className="progress-fill" style={{ width: `${progress}%` }}></div>
      </div>

      {!showFeedback ? (
        <>
          <h3 style={{ fontSize: '1.3em', lineHeight: '1.5', marginBottom: '30px' }}>
            {question.question}
          </h3>

          <div>
            {question.options.map((option, index) => (
              <button
                key={index}
                className="answer-button"
                onClick={() => handleAnswer(index)}
                style={{ fontSize: '1.1em' }}
              >
                {option}
              </button>
            ))}
          </div>
        </>
      ) : (
        <div style={{ 
          fontSize: '1.4em', 
          padding: '40px 20px',
          animation: 'fadeIn 0.5s ease-in'
        }}>
          <div className="emoji" style={{ fontSize: '2em', marginBottom: '20px' }}>‚ú®</div>
          <p>{feedbackMessage}</p>
        </div>
      )}
    </div>
  );
};

export default Quest;